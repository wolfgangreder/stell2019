/*
 * Copyright 2019 Wolfgang Reder.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package at.or.reder.rpi;

import java.awt.Graphics;
import java.awt.event.ActionListener;
import java.util.Set;
import java.util.concurrent.CopyOnWriteArraySet;
import javax.swing.JPanel;

public final class SymbolPanel extends JPanel
{

  private SymbolType symbolType = SymbolType.EMPTY;
  private final Set<ActionListener> actionListener = new CopyOnWriteArraySet<>();

  public SymbolPanel()
  {
    initComponents();
  }

  public void addActionListener(ActionListener l)
  {
    if (l != null) {
      actionListener.add(l);
    }
  }

  public void removeActionListener(ActionListener l)
  {
    actionListener.remove(l);
  }

  public void setLedState(LedPanel.LedState state)
  {
    ledPanel1.setLedState(state);
    ledPanel2.setLedState(state);
    ledPanel3.setLedState(state);
    ledPanel4.setLedState(state);
    ledPanel5.setLedState(state);
    ledPanel6.setLedState(state);
    ledPanel7.setLedState(state);
    ledPanel8.setLedState(state);
    ledPanel9.setLedState(state);
  }

  public SymbolType getSymbolType()
  {
    return symbolType;
  }

  public void setSymbolType(SymbolType symbolType)
  {
    if (this.symbolType != symbolType && symbolType != null) {
      this.symbolType = symbolType;
      ledPanel1.setState(symbolType.getVisibleLeds().get(1),
                         null);
      ledPanel2.setState(symbolType.getVisibleLeds().get(2),
                         null);
      ledPanel3.setState(symbolType.getVisibleLeds().get(3),
                         null);
      ledPanel4.setState(symbolType.getVisibleLeds().get(4),
                         null);
      ledPanel5.setState(symbolType.getVisibleLeds().get(5),
                         null);
      ledPanel6.setState(symbolType.getVisibleLeds().get(6),
                         null);
      ledPanel7.setState(symbolType.getVisibleLeds().get(7),
                         null);
      ledPanel8.setState(symbolType.getVisibleLeds().get(8),
                         null);
      ledPanel9.setState(symbolType.getVisibleLeds().get(9),
                         symbolType.getButtonColor());
    }
  }

  @Override
  protected void paintComponent(Graphics g)
  {
  }

  @Override
  public void setBounds(int x,
                        int y,
                        int width,
                        int height
  )
  {
    int wh = Math.min(width,
                      height);
    super.setBounds(x,
                    y,
                    wh,
                    wh);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
   * this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    ledPanel1 = new at.or.reder.rpi.LedPanel();
    ledPanel2 = new at.or.reder.rpi.LedPanel();
    ledPanel3 = new at.or.reder.rpi.LedPanel();
    ledPanel4 = new at.or.reder.rpi.LedPanel();
    ledPanel9 = new at.or.reder.rpi.LedPanel();
    ledPanel5 = new at.or.reder.rpi.LedPanel();
    ledPanel6 = new at.or.reder.rpi.LedPanel();
    ledPanel7 = new at.or.reder.rpi.LedPanel();
    ledPanel8 = new at.or.reder.rpi.LedPanel();

    setMinimumSize(new java.awt.Dimension(50, 50));
    setPreferredSize(new java.awt.Dimension(75, 75));
    setLayout(new java.awt.GridLayout(3, 3));
    add(ledPanel1);
    add(ledPanel2);
    add(ledPanel3);
    add(ledPanel4);

    ledPanel9.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        ledPanel9ActionPerformed(evt);
      }
    });
    add(ledPanel9);
    add(ledPanel5);
    add(ledPanel6);
    add(ledPanel7);
    add(ledPanel8);
  }// </editor-fold>//GEN-END:initComponents

  private void ledPanel9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ledPanel9ActionPerformed
  {//GEN-HEADEREND:event_ledPanel9ActionPerformed
    evt.setSource(this);
    for (ActionListener l : actionListener) {
      l.actionPerformed(evt);
    }
  }//GEN-LAST:event_ledPanel9ActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private at.or.reder.rpi.LedPanel ledPanel1;
  private at.or.reder.rpi.LedPanel ledPanel2;
  private at.or.reder.rpi.LedPanel ledPanel3;
  private at.or.reder.rpi.LedPanel ledPanel4;
  private at.or.reder.rpi.LedPanel ledPanel5;
  private at.or.reder.rpi.LedPanel ledPanel6;
  private at.or.reder.rpi.LedPanel ledPanel7;
  private at.or.reder.rpi.LedPanel ledPanel8;
  private at.or.reder.rpi.LedPanel ledPanel9;
  // End of variables declaration//GEN-END:variables
}
