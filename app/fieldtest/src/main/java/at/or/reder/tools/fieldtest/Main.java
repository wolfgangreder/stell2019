/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package at.or.reder.tools.fieldtest;

import gnu.io.PortInUseException;
import gnu.io.RXTXPort;
import gnu.io.SerialPort;
import gnu.io.UnsupportedCommOperationException;
import java.io.IOException;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Wolfgang Reder
 */
public class Main extends javax.swing.JFrame
{

  private final Field field;

  public Main() throws PortInUseException, UnsupportedCommOperationException
  {
    SerialPort port = new RXTXPort("/dev/ttyS0");
    port.setSerialPortParams(57600,
                             SerialPort.DATABITS_8,
                             SerialPort.STOPBITS_1,
                             SerialPort.PARITY_NONE);
    field = new FieldImpl(port,
                          3);
    initComponents();
    try {
      ledPanel.setValue(field.getLeds());
      blinkMask.setValue(field.getBlinkMask());
      blinkPhase.setValue(field.getBlinkPhase());
      spCalibration.setValue(field.getCalibration());
      spPWM.setValue(field.getPWM());
      edVCC.setValue(field.getVCC());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
   * this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
    javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
    javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
    javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
    javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    jButton4 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setText("LED");

    ledPanel.addChangeListener(new javax.swing.event.ChangeListener()
    {
      public void stateChanged(javax.swing.event.ChangeEvent evt)
      {
        ledPanelStateChanged(evt);
      }
    });

    jLabel2.setText("Blinken");

    blinkMask.addChangeListener(new javax.swing.event.ChangeListener()
    {
      public void stateChanged(javax.swing.event.ChangeEvent evt)
      {
        blinkMaskStateChanged(evt);
      }
    });

    blinkPhase.addChangeListener(new javax.swing.event.ChangeListener()
    {
      public void stateChanged(javax.swing.event.ChangeEvent evt)
      {
        blinkPhaseStateChanged(evt);
      }
    });

    jLabel3.setText("Phase");

    jLabel4.setText("PWM");

    slPWM.setMajorTickSpacing(10);
    slPWM.setMaximum(254);
    slPWM.setMinimum(1);
    slPWM.setPaintTicks(true);
    slPWM.setValue(0);
    slPWM.addChangeListener(new javax.swing.event.ChangeListener()
    {
      public void stateChanged(javax.swing.event.ChangeEvent evt)
      {
        slPWMStateChanged(evt);
      }
    });

    spPWM.setModel(new javax.swing.SpinnerNumberModel(1, 1, 254, 1));
    spPWM.addChangeListener(new javax.swing.event.ChangeListener()
    {
      public void stateChanged(javax.swing.event.ChangeEvent evt)
      {
        spPWMStateChanged(evt);
      }
    });

    jLabel5.setText("VCC");

    edVCC.setEditable(false);
    edVCC.setColumns(5);
    edVCC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000"))));

    jButton1.setText("Read");
    jButton1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton1ActionPerformed(evt);
      }
    });

    jButton2.setText("Read");
    jButton2.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton2ActionPerformed(evt);
      }
    });

    jButton3.setText("Write");
    jButton3.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton3ActionPerformed(evt);
      }
    });

    jLabel6.setText("Cal");

    spCalibration.setModel(new javax.swing.SpinnerNumberModel((byte)0, null, null, (byte)1));

    jButton4.setText("Read");
    jButton4.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton4ActionPerformed(evt);
      }
    });

    jButton5.setText("Write");
    jButton5.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton5ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(ledPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(blinkMask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel2))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel3)
              .addComponent(blinkPhase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(slPWM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(spPWM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton3))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel5)
              .addComponent(jLabel6))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(edVCC)
              .addComponent(spCalibration))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jButton1)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)))))
        .addContainerGap(96, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(jLabel2)
          .addComponent(jLabel3))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(ledPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(blinkMask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(blinkPhase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(slPWM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(spPWM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jButton2)
            .addComponent(jButton3))
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(edVCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButton1))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel6)
          .addComponent(spCalibration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButton4)
          .addComponent(jButton5))
        .addContainerGap(156, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void ledPanelStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_ledPanelStateChanged
  {//GEN-HEADEREND:event_ledPanelStateChanged
    try {
      field.setLeds(ledPanel.getValue());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_ledPanelStateChanged

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
  {//GEN-HEADEREND:event_jButton2ActionPerformed
    try {
      int pwm = field.getPWM();
      spPWM.setValue(pwm);
      slPWM.setValue(pwm);
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_jButton2ActionPerformed

  private void spPWMStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_spPWMStateChanged
  {//GEN-HEADEREND:event_spPWMStateChanged
    slPWM.setValue(((Number) spPWM.getValue()).intValue());
    try {
      field.setPWM(((Number) spPWM.getValue()).intValue());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_spPWMStateChanged

  private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
  {//GEN-HEADEREND:event_jButton3ActionPerformed
    try {
      field.setPWM(((Number) spPWM.getValue()).intValue());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_jButton3ActionPerformed

  private void slPWMStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_slPWMStateChanged
  {//GEN-HEADEREND:event_slPWMStateChanged
    spPWM.setValue(slPWM.getValue());
  }//GEN-LAST:event_slPWMStateChanged

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
  {//GEN-HEADEREND:event_jButton1ActionPerformed
    try {
      edVCC.setValue(field.getVCC());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
  {//GEN-HEADEREND:event_jButton4ActionPerformed
    try {
      spCalibration.setValue(field.getCalibration());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_jButton4ActionPerformed

  private void jButton5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton5ActionPerformed
  {//GEN-HEADEREND:event_jButton5ActionPerformed
    try {
      field.setCalibration(((Number) spCalibration.getValue()).byteValue());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_jButton5ActionPerformed

  private void blinkMaskStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_blinkMaskStateChanged
  {//GEN-HEADEREND:event_blinkMaskStateChanged
    try {
      field.setBlinkMask(blinkMask.getValue());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_blinkMaskStateChanged

  private void blinkPhaseStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_blinkPhaseStateChanged
  {//GEN-HEADEREND:event_blinkPhaseStateChanged
    try {
      field.setBlinkPhase(blinkPhase.getValue());
    } catch (IOException | TimeoutException | InterruptedException ex) {
      Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                 null,
                                                 ex);
    }
  }//GEN-LAST:event_blinkPhaseStateChanged

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                   null,
                                                                   ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                   null,
                                                                   ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                   null,
                                                                   ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                   null,
                                                                   ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
      try {
        new Main().setVisible(true);
      } catch (PortInUseException | UnsupportedCommOperationException ex) {
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE,
                                                   null,
                                                   ex);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private final at.or.reder.tools.fieldtest.LedPanel blinkMask = new at.or.reder.tools.fieldtest.LedPanel();
  private final at.or.reder.tools.fieldtest.LedPanel blinkPhase = new at.or.reder.tools.fieldtest.LedPanel();
  private final javax.swing.JFormattedTextField edVCC = new javax.swing.JFormattedTextField();
  private final javax.swing.JButton jButton1 = new javax.swing.JButton();
  private final javax.swing.JButton jButton2 = new javax.swing.JButton();
  private final javax.swing.JButton jButton3 = new javax.swing.JButton();
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButton5;
  private javax.swing.JLabel jLabel6;
  private final at.or.reder.tools.fieldtest.LedPanel ledPanel = new at.or.reder.tools.fieldtest.LedPanel();
  private final javax.swing.JSlider slPWM = new javax.swing.JSlider();
  private final javax.swing.JSpinner spCalibration = new javax.swing.JSpinner();
  private final javax.swing.JSpinner spPWM = new javax.swing.JSpinner();
  // End of variables declaration//GEN-END:variables
}
