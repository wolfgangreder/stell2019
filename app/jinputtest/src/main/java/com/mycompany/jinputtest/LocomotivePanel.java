/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.jinputtest;

import at.or.reder.dcc.Controller;
import at.or.reder.dcc.Locomotive;
import at.or.reder.dcc.LocomotiveFuncEvent;
import at.or.reder.dcc.LocomotiveFuncEventListener;
import at.or.reder.dcc.LocomotiveSpeedEvent;
import at.or.reder.dcc.LocomotiveSpeedEventListener;
import at.or.reder.zcan20.PacketListener;
import at.or.reder.zcan20.ZCAN;
import at.or.reder.zcan20.packet.Packet;
import java.util.function.Predicate;
import javax.swing.JPanel;

/**
 *
 * @author Wolfgang Reder
 */
public class LocomotivePanel extends JPanel
{

  private Locomotive loc;
  private final PacketListener packetListener = this::onPacket;
  private Predicate<Packet> packetMatcher;
  private final LocomotiveFuncEventListener locoFuncListener = this::onLocoFunc;
  private final LocomotiveSpeedEventListener locoSpeedListener = this::onLocoSpeed;

  public LocomotivePanel()
  {
    initComponents();
  }

  public Locomotive getLoc()
  {
    return loc;
  }

  public void setLoc(Locomotive loc)
  {
    if (this.loc != loc) {
      disconnect();
      this.loc = loc;
      connect();
    }
  }

  private void disconnect()
  {
    if (loc != null) {
      loc.removeLocomotiveFuncEventListener(locoFuncListener);
      loc.removeLocomotiveSpeedEventListener(locoSpeedListener);
      Controller controller = loc.getController();
      ZCAN mx10 = controller.getLookup().lookup(ZCAN.class);
      if (mx10 != null && packetMatcher != null) {
        mx10.removePacketListener(packetMatcher,
                                  packetListener);
      }
    }
  }

  private void connect()
  {
    if (loc != null) {
      loc.addLocomotiveFuncEventListener(locoFuncListener);
      loc.addLocomotiveSpeedEventListener(locoSpeedListener);
      ZCAN mx10 = loc.getController().getLookup().lookup(ZCAN.class);
      if (mx10 != null) {
        packetMatcher = mx10.getLocoDecoderPacketMatcher(loc.getAddress());
        mx10.addPacketListener(packetMatcher,
                               packetListener);
      } else {
        packetMatcher = null;
      }
    }
  }

  private void onLocoFunc(LocomotiveFuncEvent evt)
  {

  }

  private void onLocoSpeed(LocomotiveSpeedEvent evt)
  {

  }

  private void onPacket(ZCAN zcan,
                        Packet packet)
  {
    System.err.println(packet.toString());
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
   * this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 300, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
